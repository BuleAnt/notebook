

所以用python的selenium来控制本地浏览器，每点击一次，清空cookie、关闭浏览器、切换IP、切换UA，再次点击，且每一个步骤包含多种策略，使之更加符合用户的行为，而不是机器的行为。

大量的IP资源

点击行为。提前查了一些词的排名，挑了一些排在第2、3页的网页作为要点击的网页。正常用户的在搜索引擎的浏览行为，是先点击搜索结果第一页的几个网页，没找到满意的，在“下一页”，点击2、3页的结果，找到满意的结果后，关闭网页，退出搜索引擎。

把要刷的网页，作为最后一次点击，搜索引擎可能会认为，这个网页在一定概率上是用户想要的结果，满意了，所以退出搜索引擎，会先提高在结果中的排序，在根据该页面后续的点击频率/最后一次点击，决定是否长时间留在第一页。

点击行为设置为：先找到目标网页的具体位置，在随机点击前面的几个网页，分别停留一段时间，最后在点击目标网页，然后退出搜索引擎。


在所有点击上，各种用户属性的比例是正常的，这里指用户IP地理位置的比例、浏览器的比例、操作系统的比例、被点击次数与关键词搜索量的比例......


分辨率， 用户系统( Android、 IOS)


换IP

等待时间


点击率、停留时间、跳出率

打开网页，从头拉下来，看两分钟

点击最好是分几个时间段来做，



排名点击其实要分两步来看待，首先是在搜索引擎展示页面获得点击，这一步很重要，主要是以此判断当次关键词搜索是否起效，点击ip是否有效，是否软件自动点击，其次是在站内页面获取的点击，这一步是搜索引擎判断是否给予网站加分的标准，根据停留时间，浏览轨迹来判断页面的体验度进而获得评分。

自从百度出算法打击点击排名后，现在对UA和IP都有很高的要求的！